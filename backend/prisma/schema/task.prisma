// Tasks Management

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

enum TaskHistoryChangeType {
  STATUS
  TITLE
  CONTENT
  ASSIGNEES
  TAGS
  PRIORITY
}

model Task {
  id       Int          @id @default(autoincrement())
  title    String       @db.VarChar(120)
  content  String
  priority TaskPriority

  // to-1-Relations
  worldId  Int
  world    World      @relation(fields: [worldId], references: [id])
  authorId String?
  author   User?      @relation(fields: [authorId], references: [id])
  statusId Int
  status   TaskStatus @relation(fields: [statusId], references: [id])

  // to-many-Relations
  assignees User[]        @relation("TaskAssignees")
  tags      TaskTag[]
  comments  TaskComment[]
  history   TaskHistory[]

  // Important Dates
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TaskStatus {
  id        Int     @id @default(autoincrement())
  name      String
  color    String?
  sortOrder Int?

  // to-1-Relations
  worldId Int
  world   World @relation(fields: [worldId], references: [id])

  // to-many-Relations
  tasks Task[]

  // Important Dates
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TaskTag {
  id   Int    @id @default(autoincrement())
  name String

  // to-1-Relations
  worldId Int
  world   World @relation(fields: [worldId], references: [id])

  // to-many-Relations
  tasks Task[]

  // Important Dates
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TaskComment {
  id      Int    @id @default(autoincrement())
  content String

  // to-1-Relations
  taskId   Int
  task     Task    @relation(fields: [taskId], references: [id])
  authorId String?
  author   User?   @relation(fields: [authorId], references: [id])

  // Important Dates
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TaskHistory {
  id         Int                   @id @default(autoincrement())
  oldValue   String?
  newValue   String?
  changeType TaskHistoryChangeType

  // to-1-Relations
  taskId      Int
  task        Task   @relation(fields: [taskId], references: [id])
  changedById String
  changedBy   User?  @relation(fields: [changedById], references: [id])

  // Important Dates
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
